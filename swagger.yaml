swagger: '2.0'
info:
  title: CVN Course System API
  description: 'CVN CourSys, built during the Cloud and Big Data course at Columbia University.'
  version: 1.0.0
schemes:
  - https
basePath: /v1
produces:
  - application/json
paths:
  /user:
    put:
      summary: Create a user if id is not given, else update an existing user
      tags:
        - User
      operationId: updateUser
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Success
        '403':
          description: Duplicate email
        '404':
          description: User does not exist
        '500':
          description: Unexpected error
    get:
      summary: Get a user
      tags:
        - User
      operationId: GetUser
      produces:
        - application/json
      parameters:
        - name: email
          in: header
          required: true
          type: string
        - name: password
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Success
        '403':
          description: Unauthorized
        '500':
          description: Unexpected error
    delete:
      summary: Delete a user
      tags:
        - User
      operationId: deleteUser
      produces:
        - application/json
      parameters:
        - name: user_id
          in: header
          required: true
          type: integer
      responses:
        '200':
          description: Success
        '404':
          description: User does not exist
        '500':
          description: Unexpected error
  /course:
    put:
      summary: Create a course if id is not given, else update an existing course
      tags:
        - Course
      operationId: updateCourse
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Course'
      responses:
        '200':
          description: Success
        '403':
          description: Course does not exist
        '500':
          description: Unexpected error
    get:
      summary: Get all courses that matches the conditions
      tags:
        - Course
      operationId: getCourse
      produces:
        - application/json
      parameters:
        - name: semester
          in: header
          required: false
          type: string
        - name: subject
          in: header
          required: false
          type: string
        - name: course_number
          in: header
          required: false
          type: integer
        - name: points
          in: header
          required: false
          type: integer
        - name: title_contains
          in: header
          required: false
          type: string        
        - name: is_required
          in: header
          required: false
          type: boolean
        - name: is_breath
          in: header
          required: false
          type: boolean
        - name: is_elective
          in: header
          required: false
          type: boolean
      responses:
        '200':
          description: Success
        '404':
          description: Course does not exist
        '500':
          description: Unexpected error
    delete:
      summary: Delete a course
      tags:
        - Course
      operationId: deleteCourse
      produces:
        - application/json
      parameters:
        - name: course_id
          in: header
          required: true
          type: integer
      responses:
        '200':
          description: Success
        '404':
          description: Course does not exist
        '500':
          description: Unexpected error
  /taken:
    put:
      summary: Add a course taken by the user
      tags:
        - Taken
      operationId: addTaken
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Taken'
      responses:
        '200':
          description: Success or duplicate request
        '403':
          description: User or course does not exist
        '500':
          description: Unexpected error
    delete:
      summary: Delete a course taken by the user
      tags:
        - Taken
      operationId: deleteTaken
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Taken'
      responses:
        '200':
          description: Success
        '403':
          description: User or course does not exist
        '500':
          description: Unexpected error
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 100000
      is_admin:
        type: boolean
        example: False
      email:
        type: string
        example: tl3150@columbia.edu
      password:
        type: string
        example: 123456
      first_name:
        type: string
        example: Peter
      last_name:
        type: string
        example: Lan
      preferred_name:
        type: string
        example: Spider Man
      concentration:
        type: string
        example: Machine Learning
  Course:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 23
      subject:
        type: string
        example: COMS
      number:
        type: integer
        example: 6998
      semester:
        type: string
        example: Fall 2023
      instructor:
        type: string
        example: Sabmit Sahu
      time:
        type: string
        example: Monday 1:00pm - 3:00pm
      enrollment:
        type: integer
        example: 70
      capacity:
        type: integer
        example: 100
      description:
        type: string
        example: This is a great course!
  Taken:
    type: object
    properties:
      user_id:
        type: integer
        format: int64
        example: 10000
      course_id:
        type: integer
        example: 223